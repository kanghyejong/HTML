2020.08.05

[WEB2 JavaScript - 11. CSS 기초:선택자]
<span>태그는 띄어쓰기 없이 다른 텍스트와 구분 짓기 위해 사용
사용하여 id나 class를 사용하여 CSS를 사용할 수 있다. class는 그룹핑을 하는것
id는 하나의 특징을 정해주는 것 id가 class보다 우선순위가 높다. id는 #,
class는 .을 붙여 사용한다.

[WEB2 JavaScript - 12. 제어할 태그 선택하기]
지금 예시로 낮과 밤 모드에 따라 색깔을 변하도록 하고 있다.
버튼을 <input type="button" value="night" onclick="">을 사용하여 night와
day두개를 만들어준다. 그 후 클릭되었을 때 이벤트가 생기도록 onclick을 적어주고
""안에 우리가 버튼이 클릭되었을 때 나타나게 하고 싶은 상태를 넣어줄 것이다.
<body>태그를 선택해서 바탕은 검은색 글씨는 하얀색으로 만들려고 한다. 우선
<body>태그를 선택하도록 document.querySelector('body')를 사용한다. 문서의
body라는 태그를 선택해라 라는 의미이고 다음 style.backgroundColor='black'
을 사용하여 바탕화면색을 바꿔준다. style.color='white'를 사용하여 글씨도 
바꿔준다. 다음 버튼도 마찬가지이다. 이렇게 한다면 버튼을 눌렀을 때 <body>
태그는 버튼이 클릭되었을 때 그에 맞는 style을 갖게 된다.

[WEB2 JavaScript - 13. 프로그램, 프로그래밍, 프로그래머]
HTML은 프로그래밍 언어는 아니지만 JS는 프로그래밍 언어이다. 
웹브라우저의 기능을 실수 없이 반복하거나 시간에 맞게 실행하도록 하기 위해
만들어진 언어이다. 
프로그래밍 언어라면 가지고 있을 조건문 반복문 함수 등을 앞으로 배우게 될 
것이다.

[WEB2 JavaScript - 14. 조건문 예고]
하나의 틀이 정해져 있지 않고 상황에 따라 변하게 만들고 싶다.
영상에선 예시로 어두운 상태면 밝게 밝은 상태면 어둡게 만들도록 하고 싶어한다.
버튼을 하나를 사용해서 한다고 한다. 이것을 토글이라고 한다. 우리는 토글버튼을
만들 것이다. if-else라는 조건문을 사용한다.

[WEB2 JavaScript - 15. 비교 연산자와 블리언]
비교 연산자(===)와 Boolean이라는 데이터 타입을 배운다.
document.write(1===1)을 적는다면 비교연산자인 '==='를 이용하여 왼쪽 오른쪽
값을 비교하여 Boolean타입의 true false 값을 출력한다. 
'>', '<'도 비교연산자이다.
지금 number string boolean까지 알아보았다.

[WEB2 JavaScript - 16. 조건문]
<script>태그 안에 if(){}else{}를 사용하여 ()안에 조건을 넣어 결과가 달라지게
만든다.

[WEB2 JavaScript - 17. 조건문의 활용]
조건문을 사용하여 하나의 버튼으로 night와 day를 바꾸도록 만들려고 한다.
우선 버튼을 하나 만들고 value는 처음에는 흰색 배경이니 night로 하고 onclick안에 
if(){} else{}넣어서 조건에 따라 변하도록 할 것이다.
if 중괄호에는 어두워지게 else중괄호에는 밝아지게 만들고 if 소괄호 안에 버튼의
value값이 무엇인지 확인해서 변하도록 하려고 한다.
버튼의 value값을 확인하기 위해 이 버튼의 id를 만들어주고 document.querySelector를
이용하여 찾아서 .value로 값을 확인한다. 완성하면 소괄호 안에는 
document.querySelector('#night_day').value === 'night'라는 조건문이 들어간다.
그리고 각각의 중괄호안에 value값이 반대로 바뀌도록 해주므로서 완성시킬 수 있다.

[WEB2 JavaScript - 18. 리팩토링 중복의 제거]
리팩토링이란 코딩을 한 뒤에 비효율적인 부분이 생기는 것을 동작은 그대로 두고 
코드 자체를 효율적으로 만들어서 가독성을 높이고 유지보수를 하기 쉽도록 개선하는
과정이다.
이전의 코드를 리팩토링 해보자면 document.querySelector('#night').value로 태그의
value값을 가르켰다면 그것을 그냥 this.value로 바꾸면서 줄일 수 있다.
this는 지금 있는 태그를 가리킨다. 그러므로 id를 사용할 필요가 없어진다.
그리고 리팩토링의 중요한 점은 중복을 제거하는 것이다. 지금껏 사용해왔던 유용한
기능들은 이런 중복을 제거하면서 생겨난 것들일 것이다. 
지금 우리의 코드에는 document.querySelector('body')이 중복되어 나온다. 이것을 
onclick""의 안쪽 맨위에 var로 해서 변수로 정해주는 것이다. 
var target =  document.querySelector('body');그럼 밑에서는 target으로 저 긴 문장을
사용할 수 있게 되는 것이다.

[WEB2 JavaScript - 19. 반복문 예고]
영상에서는 웹사이트가 어두워졌을 때 링크도 어두워서 보이지 않으므로 잘 보이도록
밝게 만들려고 한다. 하지만 링크가 수억개라면 어떻게 해야할까 이때 반복문을 사용한다.

[WEB2 JavaScript - 20. 배열]
배열은 반복문과 같이 사용했을 때 효과적이다. 배열을 배우는 이유를 반복문을 배우면
알게 될 것이다.
배열은 데이터가 많아짐에 따라 연관된 데이터끼리 묶어서 보관하는 것이다.
var 이름 = [이름, 이름] 형식으로 선언한다. 사용은 이름[숫자]로 사용한다.
사용시 이름은 var이름을 적는다. 이름.length를 이용하여 개수도 구할 수 있다.
이외에도 여러가지 메소드를 이용하여 작업을 처리할 수 있다. 필요에 따라 찾아서 
사용하면 된다.

[WEB2 JavaScript - 21. 반복문]
반복문은 loop라고 부른다. while(){}을 사용하여 반복시킨다. ()안에 조건문을 넣어
조건이 맞다면 {}안의 내용들을 반복한다. 나머지 사용법은 다른 프로그래밍 언어들과
같다.

[WEB2 JavaScript - 22. 배열과 반복문]
배열과 반복문을 같이 사용하여 각각의 데이터를 배열에 넣어두고 반복문을 이용하여 
같은 틀로 사용할 수 있도록 한다.

[WEB2 JavaScript - 23. 배열과 반복문의 활용]
앞의 영상에서 배운 것들을 이용하여 모드가 바뀌었을 때 링크의 색을 변하도록 바꿔본다. 변수에 querySelectorAll을 이용하여 a태그들이 전부 들어가는 배열을 만들고
그것을 반복문에 넣어서 색깔을 바꿔준다. var link = document.querySelectorAll('a')
link[i].style.color = 'powderblue'와 같이 사용한다. 위와 같이 고치면 night모드가 
되면 파우더블루 day모드면 블루가 나오게 되었다.

